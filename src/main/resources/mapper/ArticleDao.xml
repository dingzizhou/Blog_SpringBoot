<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springboot.dao.ArticleDao">

    <resultMap id="adminArticleListMap" type="com.example.springboot.entity.Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="isTop" property="isTop"/>
        <result column="isRecycler" property="isRecycler"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <association property="category" javaType="com.example.springboot.entity.Category">
            <id column="category_id" property="id"/>
            <result column="category_name" property="name"/>
        </association>

        <collection property="tagList" ofType="com.example.springboot.entity.Tag">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="name"/>
        </collection>

    </resultMap>

    <select id="adminArticleList" resultMap="adminArticleListMap">
        select t_article.id,t_article.title,t_category.name category_name,t_tag.name tag_name,isTop,createTime,updateTime from t_article
        left join t_article_tag on t_article.title = t_article_tag.title
        left join t_category on t_article.category_id=t_category.id
        left join t_tag on t_tag.name = t_article_tag.tag
        <where>
            1=1
            <if test="condition.isRecycler != null">
                and isRecycler = #{condition.isRecycler}
            </if>
            <if test="condition.keywords != null">
                and t_article.title like concat('%',#{condition.keywords},'%')
            </if>
            <if test="condition.categoryId != null">
                and t_article.category_id = #{condition.categoryId}
            </if>
            <if test="condition.tagId != null">
                and t_tag.id = #{condition.tagId}
            </if>
        </where>
    </select>

    <select id="ArticleListCount" resultType="java.lang.Integer">
        select count(distinct t_article.id) from t_article
        left join t_article_tag on t_article.title = t_article_tag.title
        left join t_category on t_article.category_id=t_category.id
        left join t_tag on t_tag.name = t_article_tag.tag
        <where>
            1=1
            <if test="condition.isRecycler != null">
               and isRecycler = #{condition.isRecycler}
            </if>
            <if test="condition.keywords != null">
                and t_article.title like concat('%',#{condition.keywords},'%')
            </if>
            <if test="condition.categoryId != null">
                and t_article.category_id = #{condition.categoryId}
            </if>
            <if test="condition.tagId != null">
                and t_tag.id = #{condition.tagId}
            </if>
        </where>
    </select>

    <select id="getArticleById" resultMap="adminArticleListMap">
        select t_article.id,t_article.title,content,t_category.name category_name,t_category.id category_id,t_tag.name tag_name,t_tag.id tag_id,isTop,createTime,updateTime from t_article
        left join t_article_tag on t_article.title = t_article_tag.title
        left join t_category on t_article.category_id=t_category.id
        left join t_tag on t_tag.name = t_article_tag.tag
        where t_article.id = #{id}
    </select>

    <update id="updateIsTop">
        update MyBlog.t_article set isTop = 1-t_article.isTop where id = #{id}
    </update>

    <update id="updateArticle">
        update MyBlog.t_article
        set title = #{article.title},category_id=#{article.category.id},content=#{article.content},isTop=#{article.isTop},
            updateTime=NOW() where id = #{article.id}
    </update>

    <insert id="addArticle" useGeneratedKeys="true" keyProperty="id">
        insert into t_article (title,category_id,content,isTop,createTime)
        values (#{article.title},#{article.category.id},#{article.content},#{article.isTop},NOW())
    </insert>

    <delete id="delArticleTag">
        delete from t_article_tag where 1=1
        <if test="article != null">
            and title = #{article}
        </if>
        <if test="tag != null">
            and tag = #{tag}
        </if>
    </delete>

    <insert id="addArticleTag">
        insert into t_article_tag (title, tag)  values
        <foreach collection="tagList" item="tagList" separator="," close=";">
            (#{title},#{tagList.name})
        </foreach>
    </insert>
</mapper>